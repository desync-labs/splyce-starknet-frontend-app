name: CI/CD Pipeline

on:
  pull_request:
    types:
      - closed
    branches:
      - dev
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name == 'master' && 'prod' || 'dev' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set ENV tag suffix
        run: |
          echo "ENV_TAG=${{ github.ref_name == 'master' && '' || '-dev' }}" >> $GITHUB_ENV

      - name: Docker login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: |
          docker build --target production \
            --build-arg NEXT_PUBLIC_RPC_URL_SEPOLIA=${{ vars.NEXT_PUBLIC_RPC_URL_SEPOLIA }} \
            --build-arg NEXT_PUBLIC_RPC_URL_MAINNET=${{ vars.NEXT_PUBLIC_RPC_URL_MAINNET }} \
            --build-arg NEXT_PUBLIC_ENV=${{ github.ref_name == 'master' && 'prod' || 'dev' }} \
            -t ${{ vars.IMAGE_REPOSITORY }}:${{ github.sha }} .
          docker tag ${{ vars.IMAGE_REPOSITORY }}:${{ github.sha }} ${{ vars.IMAGE_REPOSITORY }}:latest${{ env.ENV_TAG }}

      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ vars.IMAGE_REPOSITORY }}:${{ github.sha }}
          docker push ${{ vars.IMAGE_REPOSITORY }}:latest${{ env.ENV_TAG }}

      - name: Sync Argo CD and wait for completion
        run: |
          MAX_RETRIES=3
          RETRY_DELAY=10
          RETRIES=0

          until [ $RETRIES -ge $MAX_RETRIES ]
          do
            docker run --rm \
              -e ARGOCD_AUTH_TOKEN=${{ secrets.ARGOCD_AUTH_TOKEN }} \
              argoproj/argocd:v2.6.15 \
              /bin/sh -c \
              "argocd app set ${{ vars.ARGOCD_APP_NAME }} \
              --server ${{ secrets.ARGOCD_API_URL }} \
              --grpc-web \
              --parameter image.tag=${{ github.sha }} && \
              argocd app wait ${{ vars.ARGOCD_APP_NAME }} \
              --server ${{ secrets.ARGOCD_API_URL }} \
              --grpc-web \
              --operation && \
              argocd app sync ${{ vars.ARGOCD_APP_NAME }} \
              --server ${{ secrets.ARGOCD_API_URL }} \
              --grpc-web \
              --timeout 180" && break

            RETRIES=$((RETRIES+1))
            echo "Retrying... ($RETRIES/$MAX_RETRIES)"
            sleep $RETRY_DELAY
          done

          if [ $RETRIES -eq $MAX_RETRIES ]; then
            echo "Failed to sync after $MAX_RETRIES attempts"
            exit 1
          fi
